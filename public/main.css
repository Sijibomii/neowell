/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.navigation, .transition, .content {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.dg.ac {
  z-index: 99999 !important;
}

@font-face {
  font-family: SK Reykjavik Rounded;
  src: url(c1546cdf78ab8e0a0180.woff2) format("woff2"), url(171887fcb99f0143e2e7.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: Frederic;
  src: url(5499cb8e0c8da3fde4a3.woff2) format("woff2"), url(5fa4ac8b61a62be7a4ad.woff) format("woff");
  font-weight: 900;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: Frederic;
  src: url(1aa04cbd27f91245126c.woff2) format("woff2"), url(deecdc2c195eaf55aa31.woff) format("woff");
  font-weight: bold;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: Frederic;
  src: url(05edb00a6a08d42e563f.woff2) format("woff2"), url(8f868191a536a6e058b4.woff) format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: Frederic;
  src: url(810fbe853c450faf0152.woff2) format("woff2"), url(174f59a4c7e8d3f93425.woff) format("woff");
  font-weight: 900;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: Frederic;
  src: url(340bf9e711e536534d23.woff2) format("woff2"), url(3fcf4843eddfa5da05bb.woff) format("woff");
  font-weight: normal;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: Frederic;
  src: url(9951bdcad34d0815fd97.woff2) format("woff2"), url(427ed5aaabe3bfee89fa.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
*,
*:after,
*:before {
  box-sizing: border-box;
  user-select: none;
}

html {
  color: "black";
  font-size: 0.5208333333vw;
  line-height: 1;
  height: auto;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  background-color: #F8F8F8;
  height: 100%;
  height: auto;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

canvas {
  pointer-events: none;
  position: relative;
  z-index: 4;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

img {
  opacity: 1;
  transition: opacity 0.4s ease;
  vertical-align: middle;
}
img.loaded {
  opacity: 1;
}

.transition {
  z-index: 16;
}

[data-animation=label] span,
[data-animation=paragraph] span,
[data-animation=title] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

[data-animation=button] {
  display: inline-block;
  position: relative;
  white-space: nowrap;
}
[data-animation=button] span {
  display: inline-block;
  transform-origin: center center 0.5em;
  vertical-align: middle;
}

[data-animation=typewrite] {
  font-size: 180%;
  white-space: nowrap;
  overflow: hidden;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}

[data-animation=link] {
  display: inline-block;
  position: relative;
  white-space: nowrap;
}
[data-animation=link] span {
  display: inline-block;
  transform-origin: center center 0.5em;
  vertical-align: middle;
}

.transition {
  z-index: 16;
}

.navigation {
  color: black;
  pointer-events: none;
  position: fixed;
  z-index: 15;
  display: flex;
  justify-content: space-between;
  width: 100vw;
}

.navigation__link {
  font-size: 0;
  height: 2rem;
  top: 1.7rem;
  left: 2rem;
  pointer-events: auto;
  position: absolute;
  transition: opacity 0.4s ease;
  width: 12.8rem;
}
@media (max-width: 1023px) {
  .navigation__link {
    left: 3.5rem;
  }
}
.navigation__link:hover {
  opacity: 0.5;
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  pointer-events: auto;
  position: absolute;
  right: 2rem;
  top: 1.7rem;
}
@media (max-width: 1023px) {
  .navigation__list__item {
    right: 3.5rem;
    align-self: center;
    margin-top: 1.6rem;
  }
}

.navigation__list__link {
  display: inline-block;
  overflow: hidden;
  position: relative;
  display: block;
}
.navigation__list__link span {
  font-size: 2.2rem;
}

.home {
  max-height: 100vh;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100vh;
}
.home .home__container {
  display: grid;
  grid-template-columns: repeat(12, 8.33333%);
  grid-template-rows: repeat(12, 8.33333%);
  grid-auto-flow: row dense;
  height: 100%;
}
@media (max-width: 1023px) {
  .home .home__container {
    display: none;
  }
}
.home .home__container .home__left {
  grid-column-start: 1;
  grid-column-end: 7;
  grid-row: span 12;
}
.home .home__container .home__left figure {
  height: 100%;
  width: 100%;
}
.home .home__container .home__left figure img {
  height: 100%;
  width: 100%;
  vertical-align: top;
  object-fit: cover;
}
.home .home__container .home__right {
  grid-column-start: 7;
  grid-column-end: 13;
  grid-row: span 12;
  background-color: #FCF7F3;
  padding: 0rem 6rem;
  padding-top: 9rem;
  text-align: center;
}
.home .home__container .home__right h2 {
  font-size: 4.3rem;
  line-height: 5.7rem;
  letter-spacing: 0.2rem;
}
.home .home__container .home__right p {
  font-size: 1.9rem;
  width: 80%;
  margin: auto;
  margin-top: 4.5rem;
  margin-bottom: 3rem;
  line-height: 3.2rem;
}
.home .home__container .home__right .read__more {
  text-decoration: underline;
  text-underline-offset: 1.3rem;
}
.home .home__container .home__right .read__more h3 {
  font-size: 2.4rem;
  font-weight: 100;
}
.home .home__container .home__products__gallery {
  background-color: white;
  position: absolute;
  bottom: 6.5rem;
  left: 65.5rem;
  display: grid;
  overflow: hidden;
}
.home .home__container .home__products__gallery .home__products__gallery__top {
  padding: 2rem 4rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 60.5vw;
  border-bottom: 1px solid black;
}
.home .home__container .home__products__gallery .home__products__gallery__top h3 {
  font-size: 2.2rem;
  margin-left: -1.5rem;
  margin-top: -0.6rem;
}
.home .home__container .home__products__gallery .home__products__gallery__top .show__all {
  margin-right: -1.1rem;
  border: 1px solid black;
  padding: 1.8rem 1.7rem;
}
.home .home__container .home__products__gallery .home__products__gallery__top .show__all h4 {
  font-size: 1.5rem;
}
.home .home__container .home__products__gallery .home__products__gallery__bottom {
  overflow: hidden;
  padding: 2rem 0rem;
  padding-bottom: 0rem;
  display: flex;
  align-items: center;
  width: 60.5vw;
}
.home .home__container .home__products__gallery .home__products__gallery__bottom .gallery__item {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.home .home__container .home__products__gallery .home__products__gallery__bottom .gallery__item .gallery__item__top {
  display: flex;
  align-items: center;
}
.home .home__container .home__products__gallery .home__products__gallery__bottom .gallery__item .gallery__item__top h4 {
  margin-right: 3rem;
  font-size: 1.5rem;
}
.home .home__container .home__products__gallery .home__products__gallery__bottom .gallery__item .gallery__item__bottom figure {
  height: 31.5rem;
  width: 29.9rem;
}
.home .home__container .home__products__gallery .home__products__gallery__bottom .gallery__item .gallery__item__bottom figure img {
  height: 100%;
  width: 100%;
  vertical-align: top;
  object-fit: cover;
}
.home .home__container__tablet {
  height: 100%;
  width: 100%;
  background-color: #FCF7F3;
  padding: 9.5rem 4rem;
  padding-bottom: 6.5rem;
  display: grid;
  grid-template-columns: repeat(12, 8.33333%);
  grid-template-rows: repeat(12, 8.33333%);
  grid-auto-flow: row dense;
}
@media (min-width: 1025px) {
  .home .home__container__tablet {
    display: none;
  }
}
.home .home__container__tablet .home__container__inner {
  height: 100%;
  grid-column-start: 1;
  grid-column-end: 13;
  grid-row-start: 1;
  grid-row-end: 13;
  border-radius: 2rem;
  background: linear-gradient(10deg, rgba(10, 7, 7, 0.6), rgba(0, 0, 0, 0.6)), url(https://images.unsplash.com/photo-1621939745912-aad97fd3a34d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=987&q=80);
  position: relative;
  min-height: 100%;
  background-size: cover;
  overflow: hidden;
}
.home .home__container__tablet .home__container__inner .home__overlay {
  height: 100%;
  width: 100%;
  display: flex;
  color: white;
  padding-top: 60rem;
  flex-direction: column;
  align-items: center;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__overlay {
    padding-top: 10rem;
  }
}
.home .home__container__tablet .home__container__inner .home__overlay h2 {
  font-size: 6rem;
  line-height: 5.7rem;
  letter-spacing: 0.2rem;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__overlay h2 {
    font-size: 3.5rem;
    text-align: center;
  }
}
.home .home__container__tablet .home__container__inner .home__overlay p {
  font-size: 3.9rem;
  width: 80%;
  margin: auto;
  margin-top: 10.5rem;
  margin-bottom: 3rem;
  line-height: 5.5rem;
  text-align: center;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__overlay p {
    font-size: 1.8rem;
    margin-top: 5rem;
    line-height: 2.5rem;
    width: 100%;
    padding: 0 4rem;
    margin-bottom: 0rem;
  }
}
.home .home__container__tablet .home__container__inner .home__overlay .btns {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 10rem;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__overlay .btns {
    margin-top: 4rem;
  }
}
.home .home__container__tablet .home__container__inner .home__overlay .btns .read__more {
  margin-right: 3rem;
  border: 1px solid white;
  padding: 2rem 1.7rem;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__overlay .btns .read__more {
    padding: 1rem;
  }
}
.home .home__container__tablet .home__container__inner .home__overlay .btns .read__more h3 {
  font-size: 2.4rem;
  font-weight: 100;
}
.home .home__container__tablet .home__container__inner .home__gallery {
  position: absolute;
  bottom: 30rem;
  z-index: 3;
  display: inline-block;
  white-space: nowrap;
  overflow: hidden;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__gallery {
    bottom: 4.5vh;
  }
}
.home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media {
  border-radius: 2rem;
  background: linear-gradient(10deg, rgba(10, 7, 7, 0.3), rgba(0, 0, 0, 0.3));
  display: inline-block;
  margin-right: 3rem;
  font-size: 0;
  height: 80rem;
  overflow: hidden;
  pointer-events: auto;
  position: relative;
  transform: translateZ(0);
  vertical-align: top;
  width: 67rem;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media {
    height: 35vh;
    width: 47rem;
  }
}
.home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media .gallery__item__top {
  position: absolute;
  background: linear-gradient(10deg, rgba(10, 7, 7, 0.6), rgba(0, 0, 0, 0.5));
  bottom: 0rem;
  width: 100%;
  height: 13rem;
  z-index: 5;
  color: gray;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media .gallery__item__top {
    height: 5rem;
  }
}
.home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media .gallery__item__top h4, .home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media .gallery__item__top span {
  font-size: 4rem;
  padding: 0rem 1.4rem;
}
@media (max-width: 767px) {
  .home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media .gallery__item__top h4, .home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media .gallery__item__top span {
    font-size: 2rem;
  }
}
.home .home__container__tablet .home__container__inner .home__gallery .gallery__item__media .gallery__item__bottom figure img {
  height: 100%;
  left: 0;
  object-fit: cover;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/